<docs_index>
  <source>
    <title>Features | uv</title>
    <description>Overview of uv's command-line interface covering Python version management, script execution, project workflows, tool installation, pip-compatible operations, and cache utilities.</description>
    <source_url>https://docs.astral.sh/uv/getting-started/features/</source_url>
    <local_file>features-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Working on projects | uv</title>
    <description>Covers project initialisation with uv init, structure including pyproject.toml and uv.lock, dependency management with uv add/remove, running commands with uv run, and building distributions.</description>
    <source_url>https://docs.astral.sh/uv/guides/projects/</source_url>
    <local_file>working-on-projects-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Installing and managing Python | uv</title>
    <description>Details installing Python versions with uv python install, automatic downloads, viewing available versions, upgrading patch releases, reinstalling distributions, and using existing system Python installations.</description>
    <source_url>https://docs.astral.sh/uv/guides/install-python/</source_url>
    <local_file>installing-and-managing-python-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Index | uv</title>
    <description>Hub page linking to detailed concepts: project structure, initialisation, dependencies, running commands, lockfiles, syncing, configuration, building distributions, and workspaces.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/</source_url>
    <local_file>index-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Creating projects | uv</title>
    <description>Explains uv init templates for applications, packaged applications with build systems and entry points, libraries with src layout, extension modules using maturin or scikit-build-core, and minimal bare projects.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/init/</source_url>
    <local_file>creating-projects-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Structure and files | uv</title>
    <description>Details pyproject.toml configuration, the .venv project environment and its automatic management, uv.lock universal lockfile format, and relationship to standardised pylock.toml format.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/layout/</source_url>
    <local_file>structure-and-files-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Managing dependencies | uv</title>
    <description>Comprehensive guide to dependency fields, uv add/remove commands, dependency sources (Git, URL, path, workspace), optional dependencies, development groups, build dependencies, editable installations, and dependency specifiers syntax.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/dependencies/</source_url>
    <local_file>managing-dependencies-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Running commands | uv</title>
    <description>Explains uv run for executing commands in project environments, requesting additional dependencies with --with, running scripts with inline metadata, legacy Windows script support, and signal handling behaviour.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/run/</source_url>
    <local_file>running-commands-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Locking and syncing | uv</title>
    <description>Details uv lock and uv sync behaviour including automatic locking, lockfile validation with --locked/--frozen, upgrading packages with --upgrade-package, syncing optional dependencies and development groups, editable installations, and partial installations.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/sync/</source_url>
    <local_file>locking-and-syncing-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Configuring projects | uv</title>
    <description>Comprehensive guide to Python version requirements, entry points (CLI/GUI/plugins), build systems, packaging options, environment paths, build isolation strategies, augmenting build dependencies with match-runtime, editable mode, and dependency conflicts.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/config/</source_url>
    <local_file>configuring-projects-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Configuration files | uv</title>
    <description>Explains project-level pyproject.toml and uv.toml files, user and system configuration hierarchy, settings precedence rules, --no-config and --config-file options, dotenv file loading with UV_ENV_FILE, and uv.pip section for pip-interface configuration.</description>
    <source_url>https://docs.astral.sh/uv/concepts/configuration-files/</source_url>
    <local_file>configuration-files-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Python versions | uv</title>
    <description>Comprehensive guide to requesting, installing, upgrading, discovering, and managing Python versions including version formats, .python-version files, automatic downloads, managed vs system installations, CPython/PyPy/GraalPy support, free-threaded variants, and python-preference settings.</description>
    <source_url>https://docs.astral.sh/uv/concepts/python-versions/</source_url>
    <local_file>python-versions-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Build backend | uv</title>
    <description>Details uv_build backend for pure Python packages including module discovery, namespace packages, stub packages, file inclusion/exclusion patterns with glob syntax, bundled vs published backend, and configuration options for module-name and module-root.</description>
    <source_url>https://docs.astral.sh/uv/concepts/build-backend/</source_url>
    <local_file>build-backend-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Building and publishing a package | uv</title>
    <description>Guide to preparing projects for packaging, building distributions with uv build, updating versions with uv version --bump options, publishing to PyPI with uv publish including token authentication and custom indices.</description>
    <source_url>https://docs.astral.sh/uv/guides/package/</source_url>
    <local_file>building-and-publishing-a-package-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Using uv with pre-commit | uv</title>
    <description>Demonstrates configuring astral-sh/uv-pre-commit hooks for automatic lockfile updates with uv-lock, exporting requirements with uv-export, and compiling requirements files with pip-compile including multi-file configurations and customisation options.</description>
    <source_url>https://docs.astral.sh/uv/guides/integration/pre-commit/</source_url>
    <local_file>using-uv-with-pre-commit-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Using uv in GitHub Actions | uv</title>
    <description>Guide to installing uv with astral-sh/setup-uv action, setting up Python versions including matrix testing, syncing projects, caching strategies with UV_CACHE_DIR, using uv pip with UV_SYSTEM_PYTHON, private repository authentication, and publishing to PyPI with trusted publishing.</description>
    <source_url>https://docs.astral.sh/uv/guides/integration/github/</source_url>
    <local_file>using-uv-in-github-actions-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
  <source>
    <title>Building distributions | uv</title>
    <description>Explains uv build command as PEP 517 build frontend for creating source distributions (sdists) and wheels, including --sdist/--wheel options, build constraints with --build-constraint, hash verification with --require-hashes, and build backend configuration.</description>
    <source_url>https://docs.astral.sh/uv/concepts/projects/build/</source_url>
    <local_file>building-distributions-uv.md</local_file>
    <scraped_at>2025-10-15</scraped_at>
  </source>
</docs_index>